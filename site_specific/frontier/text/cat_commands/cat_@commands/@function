
& @function
 
 Syntax: @function[/<switches>] <function>=<object>/<attr> 
 
 This command creates a global function named <function>. When the specified
 function is invoked, the arguments to the function are loaded into %0-%9
 registers, the <attr> attribute from <object> is fetched, and the
 substitution is performed on the resulting text. The result of that
 substitution is returned as the function result.
 
 Switches:
   /privileged - Functions are evaluated as if the evaluation were being
                 performed by the object on which it is stored, instead of as
				 if it were being performed by the invoker of the function.
				 This may be used to allow access to information normally
				 available only to wizards.
   /preserve   - Causes r-registers to be preserved across the defined
                 function, so you can feel free to use registers in the code
				 without worrying about them overwriting previous definitions.
 
 The function definitions created by @function are not stored in the database
 so they need to be re-created each time the MUX is started. It is recommended
 that the 'Startup' attribute for player #1 include code to set up all global
 functions.
 
 Function definitions may not be removed (aside from shutting down and
 restarting the MUX, but they may be redefined so that they point to an unused
 attribute. This command may normally only be invoked by player #1.

