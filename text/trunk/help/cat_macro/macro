
& macro
 
  This is the help for the MUX macro system. Note that all macros must be
  proceeded with '.'. If the macro is not found, it will be passed on like
  a normal command. The purpose of macros is to make repeated sequences of
  commands easier. This system should NOT be used if your telnet client
  supports macros of it's own, like TinyFugue.

  These are the topics for the MUX macro system:

  .add         .chmod       .clear       .create      .del
  .chslot        .ex          .gex         .list        .name .glist      .undef

  For general macro usage see 'help macro-general'.

& .add

  Command: .add <number>

  Adds an existing macro set from the global list to your first available
  slot. To remove it, .del <slot>.

& .chmod

  Command: .chmod

  This command changes the permissions on the current slot. Legal
  modes are L, R, and W. Use !mode to clear a permission.

  L corresponds to Locked. A locked set cannot be modified in any way.
  R corresponds to Read. A set marked read can be used by anyone.
  W corresponds to Write. A set marked write can be modified by
  anyone.

& .clear

  Command: .clear

  Removes/deletes all macros in your slots.  It deletes them if you
  own them. This command should be used with extreme caution.

& .create

  Command: .create <name>

  Creates a macro set and adds it to first available slot.  You only
  have 5 slots, however, and all macros you own use your slots.

& .del

  Command: .del <slot>

  Removes a macro set from slot <slot>.  You cannot remove macros
  that you own, without erasing them. If you delete a slot that you added
  with .add, it merely removes that entry from your private list.

& .chslot

  Command: .chslot <slot>

  This command changes your current slot to <slot>. Note that this is with
  your private list of slots, and commands like .ex and .del, when they take
  no arguments, use your current slot. When you define a macro with .def, it
  defines that macro in your current slot.

& .ex

  Command: .ex [slot]

  Lists the macros in your current slot. The optional parameter allows
  for the examination of other slots.

& .gex

  Command: .gex <slot>

  Examines a set in the global macro list.

& .list

  Command: .list

  This command lists all macro sets that you have in your private slots.

& .name

  Command: .name <name>

  Renames the current macro slot.

& .glist

  Command: .glist

  This command lists all macro sets from the global macro list.

& .undef

  Command: .undef <name>

  Deletes a macro in the current slot.

& macro-general

  The macro system serves the function of most macro systems, it allows
  aliases for commands, or for a series of commands.  All MUX macros and
  commands begin with '.'. In a macro, '*' is replaced by all the arguments
  you send to it.  If you typed:
        .create Test
        .def t = say Howdy *!
        .t Neighbor
   You would see:
        Macro set created with description Test.
        macro defined t:say Howdy *!
        You say, "Howdy Neighbor!"


