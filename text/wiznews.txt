& help
 ----------------------------------------------------------------------------
 -------------------------    Wiznews Topics    -----------------------------
 ----------------------------------------------------------------------------
 
 BUILD 		- Systems and info for buildings/hangars.
 PARTS		- Commands for part manipulation.
 WIZSTUFF	- Things that wizards should use and know bout.
 AUTOPILOT	- Mark's strange autopilot stuff.
 FUNCTIONS	- bt*()'s
 WEAPONS	- Some weapons misc data.
 XCODE		- Xcode Data
 WIZRULES	- Need to knew rules of behaviour.
 RESOURCES      - Where to go for help.
 ----------------------------------------------------------------------------
 NOTE: These files are very much out of date. Your best bet is to check
 the documentation wiki at http://docs.btmux or the Community portal at
 http://portal.btmux.com for additional help.
 ----------------------------------------------------------------------------

& resources
 ----------------------------------------------------------------------------
 ----------------------    Wiznews Resources     ----------------------------
 ----------------------------------------------------------------------------
 There are a number of resources available should you need help or
 further information:

 BTMux Documentation:
  http://docs.btmux.com

 BTMux SF Site:
  http://sf.btmux.com

 BTMux Mailing Lists:
  http://lists.btmux.com

 BTMux Forums/Portal:
  http://portal.btmux.com
 ----------------------------------------------------------------------------

& autopilot
 ----------------------------------------------------------------------------
 ----------------------      Wiznews Autopilot   ----------------------------
 ----------------------------------------------------------------------------
 Commds: goto <x> <y> (self-explanatory)
         leavebase <numheading to go to get out>
         wait (planned, not sure about format yet)
         enterbase <direction, ascii char of dir letter>
         load (planned, parameters unknown yet, loadcargo)
         unload (planned, parameters unknown yet, unloadcargo)
         speed <percent> Sets favored speed to <percent> of maxspeed
         report (planned, reports on radio about what I'm doing now)
         startup/shutdown (self-explanatory)
         jump <num> Jumps to to memaddr <num> of the command queue

 ----------------------------------------------------------------------------

 	 Autogun -
	 Follow # -
	 Pickup # -
	 Dropoff -
	 Stop

 ----------------------------------------------------------------------------
 Cont'd : Autopilot2

& autopilot2
 ----------------------------------------------------------------------------
 -----------------------     Wiznews Autopilot2   ---------------------------
 ----------------------------------------------------------------------------
 
 To create the AI, create the object and place it inside the
 vehicle it is to be controlled. Then do the following steps.

 1. Define type XTYPE attrib with AUTOPILOT on object
 2. Set the following flag - INHERIT
 3. After that, set the final flag - XCODE.
 4. Do a @force on the AI with command engage to activate it or make a
    command attrib to activate it. Engage is to start it up and
    disengage is to turn it off.
 5. Check each AI to verify it works by issuing commands in each one.
   
 NOTE: If it does not respond, set it !xcode and then XCODE it again
       and engage it to make it work properly.  The AI is not perfect
       but it works beautifully when it is responding.

 ---------------------------------------------------------------------------- 
 Cont'd : Autopilot3

& autopilot3
 ----------------------------------------------------------------------------
 -----------------------    Wiznews Autopilot3   ----------------------------
 ----------------------------------------------------------------------------

 cm[ode] <num> <r>
        first num = mode 0 : Flee to <r>
                         1 : Maintain range <r>
                         2 : Charge to <r>
 dfo[llow] <id>
        dumbly follows

 fo[llow] <id>
        follows

 fr[eq] <num>
        changes the main (A) freq to <num> (it's the freq sheep answer on)

 dgo[to] /go[to] : like dfo/fo, only <x> <y> arg, goes there (dumb/smart)

 he[eading] <num>
        changes heading to <num>
        (applicable only when not moving on own power)

 nog[un]
        stops using weapons

 ----------------------------------------------------------------------------
 Cont'd : Autopilot4

& autopilot4
 ----------------------------------------------------------------------------
 -----------------------   Wiznews Autopilot 4    ---------------------------
 ----------------------------------------------------------------------------

 not[arget]
        shoots at anything that is hostile

 pos[ition] <heading> <distance>
        position to maintain in formation in respect to leader

 ra[lly] <x> <y>
        Move to position - Not exact spot

 se[nsor] <mode1> <mode2>
        changes sensor mode

 sw[eight] <movement> <combat>
        alters 'weight' of moving (following follow/goto order) and
        fighting (cmode) ; basically, sensible range for both is about
        1-90 with sum preferably being around 100

 ta[rget] <id>
        sets target to <id>

 All commands are given in form
    <id> <command> [args]
           or
    all <command> [args]

 ----------------------------------------------------------------------------
 
&wizstuff
 ----------------------------------------------------------------------------
 ----------------------------    WizStuff      ------------------------------
 ----------------------------------------------------------------------------

 XCODE - List
 -------------------------------------------------
 MAP 		- For Map linkage
 MECH		- For Mech Template linkage
 DEBUG 		- Return information for MUX
 AUTOPILOT 	- For Autopilot AI
 MECHREP 	- For Repair of MECH XCODE Objects
 CUSTOM		- For Mech/Tank/Aero Customization
 CHARGEN 	- For Character Generation
 TURRET		- For MECH Turret.

@viewxcode in the XCODE object returns valid valuenames.

 ----------------------------------------------------------------------------
Cont'd : Wizstuff2 (Scode Info. Room Desc'er)

&Wizstuff2
 ----------------------------------------------------------------------------
 ---------------------------   WizStuff2   ----------------------------------
 ----------------------------------------------------------------------------
 Room Descriptor 
 ----------------
 Exits/Objects 	-
        RD_HIDDEN 	: Pass Perception Roll to see on list. inc()'s the 
			  attrib # for BTH mod.
        RD_UNKNOWN	: Visible by Wizzen only (any attrib contents).
 (Rmvd) RD_LOCK 	: u()able function to pass.  

 Players 	-
        RD_SEEIDLE	: Attrib exists, Logged off players are seen & idle
			  players idle times seen.
        RD_NOMECH 	: Active Mechs aren't seen in Contents (despam)
 
        Parent 	#74.

 ----------------------------------------------------------------------------

& buildings
 ----------------------------------------------------------------------------
 ---------------------------   Buildings   ----------------------------------
 ----------------------------------------------------------------------------

 *** NOTE ABOUT DROPSHIPS ***

 To create a hangar for a DS, you do everything below except putting the
 dbref on a BUILDLINKS somewhere. INSTEAD, you type @createbays <list of
 dbrefs> from the bridge of the dropship.

 * * *

	BuildFlag (X)
		Set with setmapvalue(dbref,buildflag,<num>)
      		<num>: it's a bitvector as follows:
        1 = externally CS
        2 = internally CS (nobody can hurt each other inside)
        4 = hidden (don't show info when someone steps on it)

 * * *

        Buildlinks : Series of obj #'s, seperated by spaces
		These are the sub-maps / objects that are located at
		their own BUILDCOORD's.
 * * *

        Buildentrance : (x,y) (x,y) (x,y) (x,y)
                (north) (east) (south) (west) <--- (X,Y entrance)
		Single number = distance from the border
                Not set = no entries

 * * *

        Buildcoord : (X,Y)
		coords on the larger map,
		omitted if not neccessary.

 * * *

 To get this whole pile of sticks working, go into the _main_ object
 and type 'updatelinks'. It recursively sets the stuff game needs to
 know about the settings.

 ----------------------------------------------------------------------------
 Cont'd Hangars

&Hangars
 ----------------------------------------------------------------------------
 --------------------------     Hangars     ---------------------------------
 ----------------------------------------------------------------------------

 Softcode Flags
 * * *
	IS_HANGAR	Mech Leavelock Check. Hangar commands.
	IS_TAGHANGAR	Tower/Fact CF-downable.
	IS_REPAIRBAY	Access to Repair stall/bay commands.
	IS_PRODUCER	Is factory in econcode.
	IS_ECONTOWER	Is tower in econcode.
	IS_EXCHANGE	Is exchange in econcode.

	BAYNUMS		The bay# data for +movemech.
	BAYREFS		Matched to BAYNUMS. DB of destination.
	BUILDCF		Scode CF tracking. (Unused).
	STALL.#		Repairbay data. (0/DBref).
	AI.LEAVEDIR	Degree heading for AI to leave safely.
	
	PRODREF		Tower/Fact DBref of Producer Object
	TOWEROBJ.DB	DBref of a Towers.. Tower Object.
	EXCHANGE.DB	DBref of Exchange Object

 
 ----------------------------------------------------------------------------


&parts
 ----------------------------------------------------------------------------
 ---------------------------     Parts      ---------------------------------
 ----------------------------------------------------------------------------

       addstuff <shortname, name or name w/ wildcards> <count>

 Adds number of selected stuff(s) to the place you are at the moment.

        removestuff <shortname, name or name w/ wildcards> <count>

 Removes number of selected stuff(s) from the place you are at the
 moment. (doesn't go below 0)

        clearstuff 

 Removes all econ stuff from your location... duh.

        loadcargo <shortname, name or name w/ wildcards> <count>

 Loads specified stuff(s) onboard, if less than selected available, loads
 those. (note: 'loadcargo * 999' propably loads about everything)

        unloadcargo <shortname, name or name w/ wildcards> <count>

 The opposite of loadcargo (note: both of these work only in proper bays, 
 and mech must not be shutdown)

        manifest/stores (optional wildcard specifier) 

 Stores shows stuff in hangar (mech/hangar command).

 Manifest shows list in mech. 'manifest Martell.*' would list all Martell
 parts.

        listforms

 Lists all possible combinations of objects available (leftmost column
 = short form, can't be abbreviated. right = as things are saved, middle =
 wildcard'able names. Must be inside an object (or you must be) with an XTYPE
 attrib set as DEBUG, along with the XCODE flag.)

 ----------------------------------------------------------------------------


& functions
 ----------------------------------------------------------------------------
 -----------------------------    Functions    ------------------------------
 ----------------------------------------------------------------------------

 This is a list of functions that is hcoded into the MUX and explained in
 details listed below.

 BTDESIGNEX(design)
 Check whether mechref 'design' is valid (whether we have a template for it)

 BTGETCHARVALUE(object, skill, mode)
 Get skill/attribute 'skill' from object 'object'. 'mode' indicates what to get 
 exactly:
        0: Get skill level or attribute base value
        1: Get skill/attribute BTH
        2: Get skill XP 

 BTSETCHARVALUE(object, skill, value, mode)
 Set skill/attribute 'skill' of object 'object' to 'value'. 'mode' indicates 
 what to set, exactly:
        0: set the raw value (skill level, attribute level) to 'value'
        1: set the BTH to 'value' (raises skill level to whatever is necessary)
        2: Add 'value' XP to the XP pool of 'skill'. 

 ----------------------------------------------------------------------------
 Cont'd : Functions2

& functions2
 ----------------------------------------------------------------------------
 --------------------------    Functions2    --------------------------------
 ----------------------------------------------------------------------------

 BTGETXCODEVALUE(object, xcodevalue)
 Get object 'object's xcodevalue 'xcodevalue'. Each 'xcode' object (objects 
 with a valid XTYPE and set XCODE) has various 'xcodevalues', certain 
 properties used both internally in the btech MUX core, and in the database. 
 You can list them with @viewxcode after you give yourself the uhm, template 
 power i think. (maybe mech, mechrep or map power :P) Most names are 
 selfexplanatory. examples are mapindex, mechref, radiorange on MECH objects, 
 mapvis, windspeed on MAP objects, etcetera etcetera.

 see 'xcodevalue' for more info.

 BTSETXCODEVALUE(object, xcodevalue, value)
 Set object 'object's xcodevalue 'xcodevalue' to value 'value'. Pretty straight 
 forward. Commonly used to do, for instance, weather (changing mapvis, maplight 
 and winddir/speed on MAP objects.) 

 BTMAKEMECH(faction, tons [, types [, optimum_tonnage [,max_variation]]]) 
 Makes a mechsub. It *DOES NOT CREATE MECHS*. It creates a 'mechsub, 3025 Era, 
 for faction 'faction', total tons of 'tons'. The rest of the arguments are 
 optional. 'types' is a bitfield of just two used bits at the moment. bit 0 is 
 'Mechs, bit 1 is Aeros. So, type '1' makes you mechs, type '2' makes you 
 aeros, type '3' makes you a mixture of aeros and mechs. Opt_tonnage is the 
 optimum tonnage of the 'mechs, and max_variation the maximum variation past 
 opt_tonnage. This function returns a list of designs. the MAKEMECHS command on 
 the DEBUG xtype does the same, but makes a nice listing of it, including 
 chances. Note, however that *THIS FUNCTION DOES NOT MAKE MECHS*. 

 MAKEMECHS - Command
  makemechs <fact> <tons> opt_tons max_variation

 Creates <fact>'s mechs of total of <tons>, with optimum tonnage of opt_tons
 (if specified) and max variation of max_variation. Also available in
 function form, makemechs(fact,tons,opt_tons,max_variation) with opt_tons
 and max_variation optional.

 Also note, that the entire btmakemech() system is hardcoded, including which 
 templates have what chances for what faction. Not very useful for this site. 

 ----------------------------------------------------------------------------
 Cont'd : Functions3

& functions3
 ----------------------------------------------------------------------------
 --------------------------    Functions3    --------------------------------
 ----------------------------------------------------------------------------

 BTMAPELEV(mapobject, x, y)
 Returns the 'height' of hex x,y on map 'mapobject'. Does not alter it.
 
 BTMAPTERR(mapobject, x, y)
 Returns the 'type' of hex x,y on map 'mapobject'. The type is just the 
 character as it shows on 'tactical', so '^', '~', '#' etc. 

 BTSTORES(mapobject, part)
 Returns the number of 'part's on map 'mapobject' (as listed by 'stores'). You 
 add stuff to a mapobject with the 'addstuff' command. (Enter map object, type 
 'addstuff Agra.PPC 2' to add 2 Agra.PPC. 'say btstores(here,Agra.PPC)' will 
 retrun 2) 

 BTUNDERREPAIR(mechobject)
 Returns true (1 probably, though not certain) if mechobject 'mechobject' is 
 undergoing repairs, 0 otherwise. 

 ----------------------------------------------------------------------------

& Weapons
 ----------------------------------------------------------------------------
 -----------------------------     Weapons      -----------------------------
 ----------------------------------------------------------------------------

 WEAPONS MINES		- Map Mines
 WEAPONS ARTY		- Artillery Stuff

 ----------------------------------------------------------------------------

& weapons mines
 ----------------------------------------------------------------------------
 -------------------------    Weapons Mines    ------------------------------
 ----------------------------------------------------------------------------


 MINES

 For setting the mines on the map, it is set using this command:
 Addmine <X> <Y> <TYPE> <STRENGTH> <OPTION>

 The Types are as follow: Vibra, Standard, Trigger, Inferno. There is 
 supposely one other command but Fingon does not know. It possiblity be 
 cluster or command but we can check that later. The Option applies to Vibra
 is the  tonnage sensor. Other note that Fingon mentioned that supposely have
 for Option is the command-operated mine as the detonation frequency mine.
 As for Trigger, I do not know.  Hopefully someone will come forward with
 the information to make it workable.
 
 ----------------------------------------------------------------------------
 
& weapons arty
 ----------------------------------------------------------------------------
 --------------------------   Weapons Arty   --------------------------------
 ----------------------------------------------------------------------------

 Artillery Materials
 For loading the artillery with different options beside standard is:

 Reload <weapon> <loc> <critsection> <OPTION>
                                     smoke, mine, cluster and explosive.

 Artillery Materials - Talked to fingon and found that Firemine, Firesmoke, 
 Firecluster and Explosive are related to Artillery and be can loaded by 
 techs if they have standard artillery rounds. Only difference is that they 
 have to add the extra flag to the end of the command to reload it. 

 ----------------------------------------------------------------------------

&Xcode
 ----------------------------------------------------------------------------
 ---------------------------       Xcode     --------------------------------
 ----------------------------------------------------------------------------
 
 XCODE STATUS 		- Status attrib list
 XCODE CRITSTATUS	- Critstatus attrib list (Use with caution)
 XCODE RADIO		- Attrib Radiotype datalist
 XCODE PCEQUIP		- Data & Info on PCEquip

 ----------------------------------------------------------------------------

& xcode critstatus
 -----------------------------------------------------------------------------
 -------------------------- Xcode Critstatus ---------------------------------
 -----------------------------------------------------------------------------

 a = Mech's gyro is destroyed (2+ crits)
 
 b = Mech's sensors damaged (1 crit)

 c = Mech has no legs

 d = Mech (BSuit) is hidden.

 e = Mech's gyro is damaged (1 crit)

 f = Mech has a damaged hip

 g = Mech's life support is destroyed

 h = Mech has a destroyed leg OR vehicle has a locked turret

 i = Vehicle is dug in

 j = Vehicle is in the process of digging in.

 k = Mech/vehcile slite is destroyed

 l = Mech/vehicle slite is on.

 m = LOAD_OK: Mech's cargo load checked.

 n = OWEIGHT_OK: Mech's current weight (dested sections+cargo) is checked.

 o = SPEED_OK: Mech's maxspeed is ok (modded for cargo/weight, etc)

 p = Unused

 q = Unused

 r = Unused

 s = Mech tarcomp destroyed

 t = C3 Destroyed

 u = Mech's ECM destroyed.

 v = Mech's Beagle probe destroyed

 w = Mech is slimed by inferno

 x = (PC_INITIALIZED): This is turly unused.

 y = Aero (only) is spinning out of control

 z = CLAIRVOYANT - Mech never gets blocked LoS.

 A = INVISIBLE - The almighty cloak. LoS checks against mech never succeed.

 B = CHEAD: Basically, 'mech is turning'. Do Not Touch

 ----------------------------------------------------------------------------
& xcode status
 ----------------------------------------------------------------------------
 ---------------------------  Xcode Status  ---------------------------------
 ----------------------------------------------------------------------------
 
 a = for VTOL/Aero its 'landed'. For Mechs it's unused.

 b = torso twisted right 60 degrees.

 c = torso twisted left 60 degrees.

 d = unit is started.
 
 e = unit is in partial cover. (used internally, mostly. at least one of the
 people who locked this unit has partial cover on it.)

 f = unit is destroyed.

 g = unit is jumping.

 h = unit is fallen. (skirt/track destroyed for tanks)

 i = unit is attempting DFA.

 j = unit is standing up.

 k = 'mechs arms are flipped.

 l = unit has AMS and it's activated.

 m = unit has an (enemy) NARC beacon attached to it

 n = pilot is unconcious.
 
 o = unit is being towed. 

 p = unit has locked a unit ("We mean business")

 q = unit has locked a building (<x> <y> b)

 r = unit has locked a hex (<x> <y>)

 s = unit has locked a hex for ignition (<x> <y> i)

 t = unit has locked a hex for clearing (<x> <y> c)

 u = unit has MASC enabled.

 v = unit is blinded. (la sensors near heat, for instance)

 w = unit is COMBAT_SAFE. (can be hit but wont take damage (will, however,
 be forced to do pilot rolls and such.)

 x = unit has its SLITE (searchlight) on.

 y = unit has just fired.

 z = unit has its ECM active.

 A = unit is under an ECM umbrella (being 'disturbed' by it)

 B = units map is under special rules (one of the following:)

 C = abnormal gravity (not 1G)

 D = abnormal temperature (enough to adjust heatsinks.) between -30 and +50
 degrees celcius is considered normal

 E = unit is in vacuum.

 ----------------------------------------------------------------------------

&XCODE RADIO
 ----------------------------------------------------------------------------
 ----------------------------  Xcode Radio  ---------------------------------
 ----------------------------------------------------------------------------

 Radiotype	Statistics
 ---------      ----------
 1-15 		Normal 
 16		X
 17-31		Normal Relay
 32		X
 33-47		Normal Info
 48		X
 49-63		Normal Relay Info
 64		X
 65-79		Normal Scan
 80		X
 81-95   	Normal Relay Scan
 96		X
 97-111		Normal Scan Info
 112		X
 113-127	Normal Relay Scan Info
 128+		X  

 ----------------------------------------------------------------------------

&xcode pcequip
 ----------------------------------------------------------------------------
 ---------------------------- Xcode PCEquip ---------------------------------
 ----------------------------------------------------------------------------


 XCODE PCEQUIP WEAPONS	- Weapons stats
 XCODE PCEQUIP ARMOR	- Armor stats
 
 ----------------------------------------------------------------------------
 
 Format PCEquip : #### <Weap1> <Weap2> <Ammo1> <Ammo2>
 		 <####> Head Torso Arms Legs
 0= nothing
 1= helmet,gloves,boots,flak_vest
 2= combat helmet, combat gloves, combat boots, ablative vest
 3= combat vest
 4= flak armorplate
 5= ablative armorplate
 6= combat armorplate
 7= dest armor
 8= black robes

 ----------------------------------------------------------------------------

 
&xcode pcequip weapons
 ----------------------------------------------------------------------------
 Name                    VRT     Damage  Range   Ammo   Price    
 ----------------------------------------------------------------------------
 Blazer                  10      32      7.2     30     18000
 Crossbow                15      9       2.7     20     600
 FederatedLongRifle      10      9       6.6     50     10000
 FlamerPistol            7       7       1.3     50     2000
 GyroslugRifle           10      14      9.0     15     13000
 HeavyGyrojetGun         10      27      10.5    10     19000
 IntekLaserRifle         10      9       12.0    45     14000
 LaserRifle              10      17      7.2     30     10000
 PulseLaserPistol        10      11      1.5     50     1500
 PulseLaserRifle         10      13      6.6     30     9000
 SMG                     5       10      2.0     50     3000
 Shotgun                 15      12      1.8     10     3000
 SternsnachtPistol       10      16      2.0     50     2500
 SunbeamLaserPistol      7       18      2.4     50     3500
 Sword                   3       5       .1      oo     500
 Vibroblade              3       7       .1      oo     800
 ZeusHeavyRifle          10      21      5.7     30     7000 
 
 NOTE: Commod Name is PC.<WeaponName>
 ----------------------------------------------------------------------------


&xcode pcequip armor
 ----------------------------------------------------------------------------
                         2x Check               damage blocked 
 Name                 Protects From         Min  %    Max   PCEquip  
 -----------------------------------------------------------------------
 Helmet               IMPACT|HEAT           5    30   15    ???
 Combat Helmet        IMPACT|SHRAPNEL|HEAT  10   50   30    2???
 Gloves               SHRAPNEL|HEAT         5    30   10    ??1?
 Combat Gloves        IMPACT|SHRAPNEL|HEAT  10   50   30    ??2?
 Boots                IMPACT|SHRAPNEL       10   40   25    ???1
 Combat Boots         IMPACT|SHRAPNEL|HEAT  20   50   50    ???2
 Flak Vest            SHRAPNEL              10   30   30    ?1??
 Ablative Vest        IMPACT|HEAT           15   40   40    ?2??
 Combat Vest          IMPACT|SHRAPNEL|HEAT  20   50   50    ?3??
 Flak Armorplate      SHRAPNEL              20   50   40    ?4??
 Ablative Armorplate  IMPACT|HEAT           20   50   40    ?5??
 Combat Armorplate    IMPACT|SHRAPNEL|HEAT  25   50   60    ?6??
 Dest Armor           IMPACT|SHRAPNEL|HEAT  ??   70   ??    ?7??
 Black Robes          IMPACT|SHRAPNEL|HEAT  ??   80   ??    ?8??


 ----------------------------------------------------------------------------

&wizrules
 ----------------------------------------------------------------------------
 ------			        Wizrules                               ------
 ----------------------------------------------------------------------------
 
   Some basic rules and guidelines you need not be offended by which I feel
 must be stated due to the enourmous bad history btech MU*'s have had with
 admin. Do not take it personaly, I just feel it is best overall so we can
 state with confidence to the playerbase that we feel strongly about the
 legitimateness and objectivity we claim to them to have, in light of most
 other sites in BattleTech MU*'s history. Extreme situations involving
 difficult players and events excluded, here are some general guidelines
 to follow:

	- Do not use the DARK flag too indiscriminately. It is nice to avoid
 being bothered, but if doing so please remain in a private location, unless
 being used to monitor suspect players. Otherwise, please inform players in
 a room you are set DARK in of your presence. Privacy is important to morale.
	
	- Avoid @teleporting into public areas to often, for reasons related
 to DARK flags, but also to avoid player familiarity with seeing wizards in
 their immediate surroundings. Although we want a friendly demeanour, players
 who feel overfamiliar with wizards in the game area tend to feel too relaxed
 when dealing with administers, which can have a slew of problems long term.

 <Cont'd in Wizrules2>

&wizrules2
	- Avoid examining players site source, on-player code, and other
 personal information, and if done do not use the information for anything
 beyond the administrative task at hand.  Site sources inparticular are a
 source of personal information relating to a players privacy, and a source
 of possible else-MU* rivalry and grudges if other players became aware. This
 invludes copying and modifying on-player code, if you want it ask for it.

	- One of the few die hard actions to NEVER take, except int he most
 EXTREME of circumstances, is to @force a player.  Most actions requiring
 the effect of @force can be accomplished through other means, and the base
 concept is completely contrary to privacy. I for one would not want an
 invisible force unzipping my fly during a meeting at work and making me
 urinate on my bosses memo, depsite how much I MIGHT want to. <grin>

 <Cont'd in Wizrules3>

&wizrules3
	- Although I have been guilty of the next one in the past, I for one
 can admit a need to rectify the behaviour. It is very unproffesional to engage
 in flamboyant @wall'ing. Depending on the content, it can have the same effect
 as common visualization of wizzen in public areas with familiarity to creating
 unnessescary fear of wizards. Example : @wall My GF dumped me so leave me be.
 Instilling the possibility of unobjective treatment, regardless of the event,
 can not only make life difficult in dealing with players for that wizzen, but
 cause generalizations about other admin as well.  The intent behind this is to
 present and objective and proffesional face to the playerbase. (Despite how
 flappy our convo's on Wizards might be or off the wall or Frustration Venting
 Sims might be. :)

	- Social interaction with the players with the admin is a very big no
 no. This does not mean be nice, friendly, and make puns on occasion when
 dealing with players, but it roots back to the 'familiarity causes problems'
 theory.  It has been a practice in btech before to have Wiz versus All sims
 or non-challant appearance of wizards in group sims, which I do not want to
 have. I have reversed my previous overt opinions on admin having PC's in light
 of choosing rougher social restrictions.  I wish to have ample inter-faction
 OOC sim options available, open channels, and the like as to allow PC's to
 have ample contact, so use them.  The wizard is almost like being at work and
 logging into a clients 'root' account to fix system problems, pull your flare
 and kick some ass, but don't go around adding cute sayings and sending user
 terminals your quote of the day. (I am very guilty of that one. Got me a date,
 though.....)

 <Cont'd in Wizrules4>

&wizrules4
	- Do not MUX as a wizard while intoxicated. (alcohol mostly) You can 
 inadvertantly do a plethora of problems which could take hours to describe.
 Don't Drink and MUX. Many vets might be aware of a mistake I made in the past
 with this, although an extreme personal situation existed on top, and it was
 very embarrasing in the end.  I have no problems with PC's being raving drunk,
 unless it is causing other obvious problems that would be problems regardless.

	- Another NEVER do : NEVER use wizard information/powers for your or 
 ANY PC's gain within the IC, or OOC, confines of the game.  This includes
 positions of mechs, RB's, or hidden links in the game, who is within what
 faction, zapping a mechs damage of, or ANYTHING that even makes you ponder
 the thought of a player OR wizard thinking it could be. This is the most
 stressed, and obvious, of all the guidelines. It is so very damn obvious that
 I should not even bloody mention it, but recent and past events in battletech
 MU*'ing demand it. I do not want to imply that I think, expect, or will overly
 react to suspcions of it. But I /WILL/ extremely react to a diehard proveable
 occurence of it. (Which is easier to find than it sounds, with daily @logging
 systems tracking data which is monitor'ed with shell scripts and MUX based 
 battletech code command logging) This point here is the primary purpose of
 this whole section, becuase of the damnable history battletech has. I personally
 have played 'one' non-Btech site in my day, for a limited time. So maybe my
 frame of reference is off, but regardless what I 'feel' it should be I have not
 to this date seen held properly in btech. Not that I am a saint.
	
 <Cont'd in Wizrules5>

&wizrules5	
	- These guidelines aren't here to make the task of wizarding more
 difficult for you. They exist to provide some basic guidelines of ethical
 behavior; in general, if you follow these guidelines, players will find it
 quite difficult to accuse you of abusing your wizpowers. They thus work for
 your protection, as well as the players'. Players frequently take wizard
 mistakes personally and seriously, and may decide, "because wizard X did this,
 all other wizards probably do, too." Players who are paranoid tend to be more
 difficult to deal with; thus, for the sake of your sanity and that of every
 other wizard who ever has to deal with that player, try to avoid giving the
 a reason to be paranoid. If you consistently have personal problems with a
 player, you should also avoid wizard dealings with that player; have another
 wizard handle the situation instead.  (Quoted from Amberyl's MUSH Manual
 for the plain fact it was stated so damn well in there)

 <Cont'd in Wizrules6>

&wizrules6 

 	Please do not take any of these as a personal assumption or a negative
 attitude toward any of you on my part. It needs to be said, for our little
 corner of btech and to aim for a respectable level, to the playerbase if not
 each other ;), of behaviour.  Noone is perfect, and it is not like I will go
 around @nuking honest good admin for minor or borderline mistakes.  All I ask
 is an honest attempt at the soul and morale of what is behind this place. I'm
 not at all conventionally religious, but Let he who has not Fucked Up cast the
 first @toad.  I Fucked Up.  When/if it's your turn try to do it honestly and with
 the least amount of fireworks possible. :)

